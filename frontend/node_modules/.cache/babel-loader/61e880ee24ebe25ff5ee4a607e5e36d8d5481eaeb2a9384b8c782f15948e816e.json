{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blue Sky\\\\Desktop\\\\LocalMart\\\\LocalMart\\\\frontend\\\\src\\\\utils\\\\auth.js\";\n// src/utils/auth.js\nimport authService from '../services/authService';\nimport React from 'react';\n\n// Utility function to handle API errors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const handleApiError = error => {\n  if (error.response) {\n    var _error$response$data;\n    return ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred';\n  } else if (error.request) {\n    return 'Network error. Please check your connection.';\n  } else if (error.message) {\n    return error.message;\n  } else if (typeof error === 'string') {\n    return error;\n  } else {\n    return 'An unexpected error occurred. Please try again.';\n  }\n};\n\n// Redirect user based on role\nexport const redirectToDashboard = () => {\n  const userType = authService.getUserType();\n  if (userType === 'seller') {\n    window.location.href = '/seller-dashboard';\n  } else if (userType === 'buyer') {\n    window.location.href = '/buyer-dashboard';\n  } else {\n    window.location.href = '/login';\n  }\n};\n\n// Check auth and redirect if logged in\nexport const checkAuthAndRedirect = () => {\n  if (authService.isAuthenticated()) {\n    redirectToDashboard();\n    return true;\n  }\n  return false;\n};\n\n// HOC: Protect route\nexport const withAuth = WrappedComponent => {\n  return function AuthenticatedComponent(props) {\n    const isAuthenticated = authService.isAuthenticated();\n    if (!isAuthenticated) {\n      window.location.href = '/login';\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  };\n};\n\n// HOC: Protect seller-only route\nexport const withSellerAuth = WrappedComponent => {\n  return function SellerAuthenticatedComponent(props) {\n    const isAuthenticated = authService.isAuthenticated();\n    const isSeller = authService.isSeller();\n    if (!isAuthenticated) {\n      window.location.href = '/login';\n      return null;\n    }\n    if (!isSeller) {\n      window.location.href = '/buyer-dashboard';\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  };\n};\n\n// HOC: Protect buyer-only route\nexport const withBuyerAuth = WrappedComponent => {\n  return function BuyerAuthenticatedComponent(props) {\n    const isAuthenticated = authService.isAuthenticated();\n    const isBuyer = authService.isBuyer();\n    if (!isAuthenticated) {\n      window.location.href = '/login';\n      return null;\n    }\n    if (!isBuyer) {\n      window.location.href = '/seller-dashboard';\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  };\n};\n\n// Password strength validation\nexport const validatePassword = password => {\n  const minLength = 6;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumbers = /\\d/.test(password);\n  const errors = [];\n  if (password.length < minLength) {\n    errors.push(`Password must be at least ${minLength} characters long`);\n  }\n  if (!hasUpperCase) {\n    errors.push('Password must contain at least one uppercase letter');\n  }\n  if (!hasLowerCase) {\n    errors.push('Password must contain at least one lowercase letter');\n  }\n  if (!hasNumbers) {\n    errors.push('Password must contain at least one number');\n  }\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n// Email format validation\nexport const validateEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};","map":{"version":3,"names":["authService","React","jsxDEV","_jsxDEV","handleApiError","error","response","_error$response$data","data","message","request","redirectToDashboard","userType","getUserType","window","location","href","checkAuthAndRedirect","isAuthenticated","withAuth","WrappedComponent","AuthenticatedComponent","props","fileName","_jsxFileName","lineNumber","columnNumber","withSellerAuth","SellerAuthenticatedComponent","isSeller","withBuyerAuth","BuyerAuthenticatedComponent","isBuyer","validatePassword","password","minLength","hasUpperCase","test","hasLowerCase","hasNumbers","errors","length","push","isValid","validateEmail","email","emailRegex"],"sources":["C:/Users/Blue Sky/Desktop/LocalMart/LocalMart/frontend/src/utils/auth.js"],"sourcesContent":["// src/utils/auth.js\r\nimport authService from '../services/authService';\r\nimport React from 'react';\r\n\r\n// Utility function to handle API errors\r\nexport const handleApiError = (error) => {\r\n  if (error.response) {\r\n    return error.response.data?.message || 'An error occurred';\r\n  } else if (error.request) {\r\n    return 'Network error. Please check your connection.';\r\n  } else if (error.message) {\r\n    return error.message;\r\n  } else if (typeof error === 'string') {\r\n    return error;\r\n  } else {\r\n    return 'An unexpected error occurred. Please try again.';\r\n  }\r\n};\r\n\r\n// Redirect user based on role\r\nexport const redirectToDashboard = () => {\r\n  const userType = authService.getUserType();\r\n  if (userType === 'seller') {\r\n    window.location.href = '/seller-dashboard';\r\n  } else if (userType === 'buyer') {\r\n    window.location.href = '/buyer-dashboard';\r\n  } else {\r\n    window.location.href = '/login';\r\n  }\r\n};\r\n\r\n// Check auth and redirect if logged in\r\nexport const checkAuthAndRedirect = () => {\r\n  if (authService.isAuthenticated()) {\r\n    redirectToDashboard();\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n// HOC: Protect route\r\nexport const withAuth = (WrappedComponent) => {\r\n  return function AuthenticatedComponent(props) {\r\n    const isAuthenticated = authService.isAuthenticated();\r\n    if (!isAuthenticated) {\r\n      window.location.href = '/login';\r\n      return null;\r\n    }\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n};\r\n\r\n// HOC: Protect seller-only route\r\nexport const withSellerAuth = (WrappedComponent) => {\r\n  return function SellerAuthenticatedComponent(props) {\r\n    const isAuthenticated = authService.isAuthenticated();\r\n    const isSeller = authService.isSeller();\r\n    if (!isAuthenticated) {\r\n      window.location.href = '/login';\r\n      return null;\r\n    }\r\n    if (!isSeller) {\r\n      window.location.href = '/buyer-dashboard';\r\n      return null;\r\n    }\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n};\r\n\r\n// HOC: Protect buyer-only route\r\nexport const withBuyerAuth = (WrappedComponent) => {\r\n  return function BuyerAuthenticatedComponent(props) {\r\n    const isAuthenticated = authService.isAuthenticated();\r\n    const isBuyer = authService.isBuyer();\r\n    if (!isAuthenticated) {\r\n      window.location.href = '/login';\r\n      return null;\r\n    }\r\n    if (!isBuyer) {\r\n      window.location.href = '/seller-dashboard';\r\n      return null;\r\n    }\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n};\r\n\r\n// Password strength validation\r\nexport const validatePassword = (password) => {\r\n  const minLength = 6;\r\n  const hasUpperCase = /[A-Z]/.test(password);\r\n  const hasLowerCase = /[a-z]/.test(password);\r\n  const hasNumbers = /\\d/.test(password);\r\n  const errors = [];\r\n\r\n  if (password.length < minLength) {\r\n    errors.push(`Password must be at least ${minLength} characters long`);\r\n  }\r\n  if (!hasUpperCase) {\r\n    errors.push('Password must contain at least one uppercase letter');\r\n  }\r\n  if (!hasLowerCase) {\r\n    errors.push('Password must contain at least one lowercase letter');\r\n  }\r\n  if (!hasNumbers) {\r\n    errors.push('Password must contain at least one number');\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n// Email format validation\r\nexport const validateEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}