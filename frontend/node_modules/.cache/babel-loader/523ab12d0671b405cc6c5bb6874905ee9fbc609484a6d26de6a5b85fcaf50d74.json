{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\WAD Project\\\\LocalMart\\\\frontend\\\\src\\\\components\\\\Seller\\\\seller-dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport authService from \"../../services/authService\";\nimport Order from \"./Seller-Dashboard-Components/Order\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SellerDashboard = () => {\n  _s();\n  const [pendingOrders, setPendingOrders] = useState([]);\n  const [pendingLoading, setPendingLoading] = useState(true);\n  const [notification, setNotification] = useState({\n    show: false,\n    message: \"\",\n    isSuccess: true\n  });\n\n  // Fetch pending orders\n  useEffect(() => {\n    const fetchPendingOrders = async () => {\n      try {\n        setPendingLoading(true);\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setPendingOrders([]);\n          setPendingLoading(false);\n          return;\n        }\n\n        // Make sure this endpoint filters by status=pending\n        const response = await fetch(\"/api/orders?sellerId=me&status=pending\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error(\"Failed to fetch pending orders\");\n        const data = await response.json();\n\n        // If backend doesn't filter properly, filter here:\n        const pending = (data.orders || []).filter(order => order.status === \"pending\");\n        setPendingOrders(pending);\n      } catch (error) {\n        console.error(\"Error fetching pending orders:\", error);\n        setPendingOrders([]);\n      } finally {\n        setPendingLoading(false);\n      }\n    };\n    fetchPendingOrders();\n  }, []);\n\n  // Function to accept order\n  const acceptOrder = async orderId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"You must be logged in\");\n        return;\n      }\n\n      // Call backend API to update order status to \"processing\" or \"accepted\"\n      const res = await fetch(`/api/orders/${orderId}/accept`, {\n        method: \"PUT\",\n        // or PATCH depending on your API\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          status: \"processing\"\n        }) // or \"accepted\"\n      });\n      if (!res.ok) throw new Error(\"Failed to accept order\");\n\n      // On success, remove order from pendingOrders state immediately\n      setPendingOrders(prevOrders => prevOrders.filter(order => order._id !== orderId));\n\n      // Show notification\n      setNotification({\n        show: true,\n        message: `Order #${orderId} accepted!`,\n        isSuccess: true\n      });\n\n      // Hide notification after 3 seconds\n      setTimeout(() => setNotification(prev => ({\n        ...prev,\n        show: false\n      })), 3000);\n    } catch (error) {\n      console.error(error);\n      setNotification({\n        show: true,\n        message: \"Failed to accept order.\",\n        isSuccess: false\n      });\n      setTimeout(() => setNotification(prev => ({\n        ...prev,\n        show: false\n      })), 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pending Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), pendingLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : pendingOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No pending orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : pendingOrders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n      order: order,\n      onAccept: () => acceptOrder(order._id) // pass accept handler to Order component\n    }, order._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)), notification.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        bottom: 20,\n        right: 20,\n        backgroundColor: notification.isSuccess ? \"green\" : \"red\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        borderRadius: 5,\n        zIndex: 1000\n      },\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(SellerDashboard, \"/STrQVsUR1weon3StQvQKXmWHZU=\");\n_c = SellerDashboard;\nexport default SellerDashboard;\nvar _c;\n$RefreshReg$(_c, \"SellerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","authService","Order","jsxDEV","_jsxDEV","SellerDashboard","_s","pendingOrders","setPendingOrders","pendingLoading","setPendingLoading","notification","setNotification","show","message","isSuccess","fetchPendingOrders","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","data","json","pending","orders","filter","order","status","error","console","acceptOrder","orderId","alert","res","method","body","JSON","stringify","prevOrders","_id","setTimeout","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onAccept","style","position","bottom","right","backgroundColor","color","padding","borderRadius","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/WAD Project/LocalMart/frontend/src/components/Seller/seller-dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport authService from \"../../services/authService\";\r\nimport Order from \"./Seller-Dashboard-Components/Order\";\r\n\r\nconst SellerDashboard = () => {\r\n  const [pendingOrders, setPendingOrders] = useState([]);\r\n  const [pendingLoading, setPendingLoading] = useState(true);\r\n  const [notification, setNotification] = useState({ show: false, message: \"\", isSuccess: true });\r\n\r\n  // Fetch pending orders\r\n  useEffect(() => {\r\n    const fetchPendingOrders = async () => {\r\n      try {\r\n        setPendingLoading(true);\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          setPendingOrders([]);\r\n          setPendingLoading(false);\r\n          return;\r\n        }\r\n\r\n        // Make sure this endpoint filters by status=pending\r\n        const response = await fetch(\"/api/orders?sellerId=me&status=pending\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Failed to fetch pending orders\");\r\n        const data = await response.json();\r\n\r\n        // If backend doesn't filter properly, filter here:\r\n        const pending = (data.orders || []).filter(order => order.status === \"pending\");\r\n        setPendingOrders(pending);\r\n      } catch (error) {\r\n        console.error(\"Error fetching pending orders:\", error);\r\n        setPendingOrders([]);\r\n      } finally {\r\n        setPendingLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPendingOrders();\r\n  }, []);\r\n\r\n  // Function to accept order\r\n  const acceptOrder = async (orderId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"You must be logged in\");\r\n        return;\r\n      }\r\n\r\n      // Call backend API to update order status to \"processing\" or \"accepted\"\r\n      const res = await fetch(`/api/orders/${orderId}/accept`, {\r\n        method: \"PUT\", // or PATCH depending on your API\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ status: \"processing\" }), // or \"accepted\"\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"Failed to accept order\");\r\n\r\n      // On success, remove order from pendingOrders state immediately\r\n      setPendingOrders((prevOrders) => prevOrders.filter((order) => order._id !== orderId));\r\n\r\n      // Show notification\r\n      setNotification({ show: true, message: `Order #${orderId} accepted!`, isSuccess: true });\r\n\r\n      // Hide notification after 3 seconds\r\n      setTimeout(() => setNotification((prev) => ({ ...prev, show: false })), 3000);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setNotification({ show: true, message: \"Failed to accept order.\", isSuccess: false });\r\n      setTimeout(() => setNotification((prev) => ({ ...prev, show: false })), 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Pending Orders</h1>\r\n      {pendingLoading ? (\r\n        <p>Loading...</p>\r\n      ) : pendingOrders.length === 0 ? (\r\n        <p>No pending orders</p>\r\n      ) : (\r\n        pendingOrders.map((order) => (\r\n          <Order\r\n            key={order._id}\r\n            order={order}\r\n            onAccept={() => acceptOrder(order._id)} // pass accept handler to Order component\r\n          />\r\n        ))\r\n      )}\r\n\r\n      {notification.show && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: 20,\r\n            right: 20,\r\n            backgroundColor: notification.isSuccess ? \"green\" : \"red\",\r\n            color: \"white\",\r\n            padding: \"10px 20px\",\r\n            borderRadius: 5,\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}