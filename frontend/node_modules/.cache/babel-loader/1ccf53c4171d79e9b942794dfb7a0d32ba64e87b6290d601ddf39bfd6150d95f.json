{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\WAD Project\\\\LocalMart\\\\frontend\\\\src\\\\components\\\\Seller\\\\Seller-Dashboard-Components\\\\Order.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Order.css\";\nimport \"./seller.css\";\n\n// Get seller ID from localStorage\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getCurrentUserId = () => {\n  const user = localStorage.getItem(\"user\");\n  if (user) {\n    const userData = JSON.parse(user);\n    return userData.id || userData._id || userData.userId;\n  }\n  return localStorage.getItem(\"userId\");\n};\n\n// Map status to colors\nconst statusColors = {\n  pending: \"#f44336\",\n  // Red\n  confirmed: \"#4caf50\",\n  // Green\n  delivered: \"#ff9800\" // Orange\n};\nfunction Order() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [notification, setNotification] = useState({\n    show: false,\n    message: \"\",\n    isSuccess: true\n  });\n  const [loading, setLoading] = useState({\n    type: \"\",\n    id: null\n  });\n  const sellerId = getCurrentUserId();\n\n  // Show notification helper\n  const showNotification = (message, isSuccess = true) => {\n    setNotification({\n      show: true,\n      message,\n      isSuccess\n    });\n    setTimeout(() => {\n      setNotification(prev => ({\n        ...prev,\n        show: false\n      }));\n    }, 3000);\n  };\n\n  // Fetch orders for the seller with token header\n  const fetchOrders = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/orders/seller`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const json = await response.json();\n      if (!response.ok) throw new Error(json.message || \"Failed to fetch orders\");\n      setOrders(json.data); // Use the 'data' array from the response\n    } catch (error) {\n      showNotification(error.message, false);\n    }\n  };\n  useEffect(() => {\n    if (sellerId) {\n      fetchOrders();\n    }\n  }, [sellerId]);\n\n  // Update order status API call\n  const updateOrderStatus = async (orderId, newStatus) => {\n    setLoading({\n      type: \"order\",\n      id: orderId\n    });\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          status: newStatus\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.message || \"Failed to update order status\");\n      }\n      await fetchOrders();\n      let message = \"\";\n      if (newStatus === \"confirmed\") {\n        message = `Order #${orderId} accepted and being prepared!`;\n      } else if (newStatus === \"delivered\") {\n        message = `Order #${orderId} marked as delivered!`;\n      }\n      showNotification(message);\n    } catch (error) {\n      showNotification(error.message, false);\n    } finally {\n      setLoading({\n        type: \"\",\n        id: null\n      });\n    }\n  };\n\n  // Complete order handler\n  const completeOrder = orderId => {\n    const order = orders.find(o => o._id === orderId);\n    if (!order) return;\n    if (order.status === \"confirmed\") {\n      updateOrderStatus(orderId, \"delivered\");\n    } else {\n      showNotification(\"Cannot complete order unless it is confirmed.\", false);\n    }\n  };\n\n  // Group orders by status\n  const groupedOrders = {\n    pending: orders.filter(order => order.status === \"pending\"),\n    confirmed: orders.filter(order => order.status === \"confirmed\"),\n    delivered: orders.filter(order => order.status === \"delivered\")\n  };\n\n  // Helper to render order cards\n  const renderOrderCard = order => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Order #\", order.orderNumber, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"order-status\",\n        style: {\n          backgroundColor: statusColors[order.status] || \"grey\",\n          color: \"white\",\n          padding: \"0.25em 0.8em\",\n          borderRadius: \"20px\",\n          marginLeft: \"10px\",\n          fontSize: \"0.75em\",\n          fontWeight: \"600\",\n          minWidth: \"60px\",\n          textAlign: \"center\",\n          display: \"inline-block\"\n        },\n        children: order.status.charAt(0).toUpperCase() + order.status.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Customer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), \" \", order.buyer.name || order.buyer.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), \" \", order.deliveryAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Mobile:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), \" \", order.phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), \" \", order.items.map(item => `${item.itemName} x${item.quantity}`).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), \" Rs. \", order.totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        style: {\n          display: \"flex\",\n          gap: \"10px\"\n        },\n        children: [order.status === \"pending\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => updateOrderStatus(order._id, \"confirmed\"),\n          disabled: loading.type === \"order\" && loading.id === order._id,\n          children: loading.type === \"order\" && loading.id === order._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), \" Updating...\"]\n          }, void 0, true) : \"Accept Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), (order.status === \"confirmed\" || order.status === \"pending\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline\",\n          onClick: () => completeOrder(order._id),\n          disabled: loading.type === \"order\" && loading.id === order._id,\n          children: loading.type === \"order\" && loading.id === order._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), \" Updating...\"]\n          }, void 0, true) : \"Complete Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), order.status === \"delivered\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline\",\n          disabled: true,\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, order._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"orders\",\n    style: {\n      maxWidth: \"900px\",\n      margin: \"auto\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      style: {\n        marginBottom: \"2rem\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontWeight: \"700\",\n          fontSize: \"2.5rem\"\n        },\n        children: \"Orders Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"1.1rem\",\n          color: \"#666\"\n        },\n        children: \"Manage and track all your customer orders here, organized by status.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), [\"pending\", \"confirmed\", \"delivered\"].map(status => /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: \"3rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: statusColors[status],\n          borderBottom: `3px solid ${statusColors[status]}`,\n          paddingBottom: \"0.3rem\",\n          marginBottom: \"1rem\",\n          textTransform: \"capitalize\",\n          fontWeight: \"700\",\n          fontSize: \"1.8rem\"\n        },\n        children: [status, \" Orders (\", groupedOrders[status].length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), groupedOrders[status].length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontStyle: \"italic\",\n          color: \"#888\"\n        },\n        children: [\"No \", status, \" orders.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this) : groupedOrders[status].map(renderOrderCard)]\n    }, status, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)), notification.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.isSuccess ? \"success\" : \"error\"}`,\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        right: \"20px\",\n        padding: \"15px 25px\",\n        borderRadius: \"6px\",\n        color: \"white\",\n        backgroundColor: notification.isSuccess ? \"#4caf50\" : \"#f44336\",\n        boxShadow: \"0 2px 10px rgba(0,0,0,0.3)\",\n        zIndex: 9999,\n        fontWeight: \"600\",\n        fontSize: \"1rem\"\n      },\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(Order, \"cXMiny6iadLub8A5k5hyucBiNxs=\");\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","getCurrentUserId","user","localStorage","getItem","userData","JSON","parse","id","_id","userId","statusColors","pending","confirmed","delivered","Order","_s","orders","setOrders","notification","setNotification","show","message","isSuccess","loading","setLoading","type","sellerId","showNotification","setTimeout","prev","fetchOrders","token","response","fetch","headers","Authorization","json","ok","Error","data","error","updateOrderStatus","orderId","newStatus","method","body","stringify","status","errData","completeOrder","order","find","o","groupedOrders","filter","renderOrderCard","className","children","orderNumber","style","backgroundColor","color","padding","borderRadius","marginLeft","fontSize","fontWeight","minWidth","textAlign","display","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","buyer","name","email","deliveryAddress","phoneNumber","items","map","item","itemName","quantity","join","totalAmount","gap","onClick","disabled","maxWidth","margin","marginBottom","borderBottom","paddingBottom","textTransform","length","fontStyle","position","bottom","right","boxShadow","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/WAD Project/LocalMart/frontend/src/components/Seller/Seller-Dashboard-Components/Order.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Order.css\";\r\nimport \"./seller.css\";\r\n\r\n// Get seller ID from localStorage\r\nconst getCurrentUserId = () => {\r\n  const user = localStorage.getItem(\"user\");\r\n  if (user) {\r\n    const userData = JSON.parse(user);\r\n    return userData.id || userData._id || userData.userId;\r\n  }\r\n  return localStorage.getItem(\"userId\");\r\n};\r\n\r\n// Map status to colors\r\nconst statusColors = {\r\n  pending: \"#f44336\",   // Red\r\n  confirmed: \"#4caf50\", // Green\r\n  delivered: \"#ff9800\", // Orange\r\n};\r\n\r\nfunction Order() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [notification, setNotification] = useState({\r\n    show: false,\r\n    message: \"\",\r\n    isSuccess: true,\r\n  });\r\n  const [loading, setLoading] = useState({ type: \"\", id: null });\r\n\r\n  const sellerId = getCurrentUserId();\r\n\r\n  // Show notification helper\r\n  const showNotification = (message, isSuccess = true) => {\r\n    setNotification({ show: true, message, isSuccess });\r\n    setTimeout(() => {\r\n      setNotification((prev) => ({ ...prev, show: false }));\r\n    }, 3000);\r\n  };\r\n\r\n  // Fetch orders for the seller with token header\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(`http://localhost:5000/api/orders/seller`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n\r\n      if (!response.ok) throw new Error(json.message || \"Failed to fetch orders\");\r\n\r\n      setOrders(json.data); // Use the 'data' array from the response\r\n    } catch (error) {\r\n      showNotification(error.message, false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sellerId) {\r\n      fetchOrders();\r\n    }\r\n  }, [sellerId]);\r\n\r\n  // Update order status API call\r\n  const updateOrderStatus = async (orderId, newStatus) => {\r\n    setLoading({ type: \"order\", id: orderId });\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ status: newStatus }),\r\n      });\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.message || \"Failed to update order status\");\r\n      }\r\n\r\n      await fetchOrders();\r\n\r\n      let message = \"\";\r\n      if (newStatus === \"confirmed\") {\r\n        message = `Order #${orderId} accepted and being prepared!`;\r\n      } else if (newStatus === \"delivered\") {\r\n        message = `Order #${orderId} marked as delivered!`;\r\n      }\r\n      showNotification(message);\r\n    } catch (error) {\r\n      showNotification(error.message, false);\r\n    } finally {\r\n      setLoading({ type: \"\", id: null });\r\n    }\r\n  };\r\n\r\n  // Complete order handler\r\n  const completeOrder = (orderId) => {\r\n    const order = orders.find((o) => o._id === orderId);\r\n    if (!order) return;\r\n\r\n    if (order.status === \"confirmed\") {\r\n      updateOrderStatus(orderId, \"delivered\");\r\n    } else {\r\n      showNotification(\"Cannot complete order unless it is confirmed.\", false);\r\n    }\r\n  };\r\n\r\n  // Group orders by status\r\n  const groupedOrders = {\r\n    pending: orders.filter((order) => order.status === \"pending\"),\r\n    confirmed: orders.filter((order) => order.status === \"confirmed\"),\r\n    delivered: orders.filter((order) => order.status === \"delivered\"),\r\n  };\r\n\r\n  // Helper to render order cards\r\n  const renderOrderCard = (order) => (\r\n    <div key={order._id} className=\"order-card\">\r\n      <h3>\r\n        Order #{order.orderNumber}\r\n        <span\r\n          className=\"order-status\"\r\n          style={{\r\n            backgroundColor: statusColors[order.status] || \"grey\",\r\n            color: \"white\",\r\n            padding: \"0.25em 0.8em\",\r\n            borderRadius: \"20px\",\r\n            marginLeft: \"10px\",\r\n            fontSize: \"0.75em\",\r\n            fontWeight: \"600\",\r\n            minWidth: \"60px\",\r\n            textAlign: \"center\",\r\n            display: \"inline-block\",\r\n          }}\r\n        >\r\n          {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\r\n        </span>\r\n      </h3>\r\n      <div className=\"order-info\">\r\n        <p>\r\n          <strong>Customer:</strong> {order.buyer.name || order.buyer.email}\r\n        </p>\r\n        <p>\r\n          <strong>Address:</strong> {order.deliveryAddress}\r\n        </p>\r\n        <p>\r\n          <strong>Mobile:</strong> {order.phoneNumber}\r\n        </p>\r\n        <p>\r\n          <strong>Items:</strong>{\" \"}\r\n          {order.items.map((item) => `${item.itemName} x${item.quantity}`).join(\", \")}\r\n        </p>\r\n        <p>\r\n          <strong>Total:</strong> Rs. {order.totalAmount}\r\n        </p>\r\n        <div className=\"action-buttons\" style={{ display: \"flex\", gap: \"10px\" }}>\r\n          {order.status === \"pending\" && (\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => updateOrderStatus(order._id, \"confirmed\")}\r\n              disabled={loading.type === \"order\" && loading.id === order._id}\r\n            >\r\n              {loading.type === \"order\" && loading.id === order._id ? (\r\n                <>\r\n                  <div className=\"loading-spinner\"></div> Updating...\r\n                </>\r\n              ) : (\r\n                \"Accept Order\"\r\n              )}\r\n            </button>\r\n          )}\r\n\r\n          {(order.status === \"confirmed\" || order.status === \"pending\") && (\r\n            <button\r\n              className=\"btn btn-outline\"\r\n              onClick={() => completeOrder(order._id)}\r\n              disabled={loading.type === \"order\" && loading.id === order._id}\r\n            >\r\n              {loading.type === \"order\" && loading.id === order._id ? (\r\n                <>\r\n                  <div className=\"loading-spinner\"></div> Updating...\r\n                </>\r\n              ) : (\r\n                \"Complete Order\"\r\n              )}\r\n            </button>\r\n          )}\r\n\r\n          {order.status === \"delivered\" && (\r\n            <button className=\"btn btn-outline\" disabled>\r\n              Completed\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div id=\"orders\" style={{ maxWidth: \"900px\", margin: \"auto\", padding: \"20px\" }}>\r\n      <div className=\"header\" style={{ marginBottom: \"2rem\", textAlign: \"center\" }}>\r\n        <h1 style={{ fontWeight: \"700\", fontSize: \"2.5rem\" }}>Orders Dashboard</h1>\r\n        <p style={{ fontSize: \"1.1rem\", color: \"#666\" }}>\r\n          Manage and track all your customer orders here, organized by status.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Section for each order status */}\r\n      {[\"pending\", \"confirmed\", \"delivered\"].map((status) => (\r\n        <section key={status} style={{ marginBottom: \"3rem\" }}>\r\n          <h2\r\n            style={{\r\n              color: statusColors[status],\r\n              borderBottom: `3px solid ${statusColors[status]}`,\r\n              paddingBottom: \"0.3rem\",\r\n              marginBottom: \"1rem\",\r\n              textTransform: \"capitalize\",\r\n              fontWeight: \"700\",\r\n              fontSize: \"1.8rem\",\r\n            }}\r\n          >\r\n            {status} Orders ({groupedOrders[status].length})\r\n          </h2>\r\n\r\n          {groupedOrders[status].length === 0 ? (\r\n            <p style={{ fontStyle: \"italic\", color: \"#888\" }}>No {status} orders.</p>\r\n          ) : (\r\n            groupedOrders[status].map(renderOrderCard)\r\n          )}\r\n        </section>\r\n      ))}\r\n\r\n      {notification.show && (\r\n        <div\r\n          className={`notification ${notification.isSuccess ? \"success\" : \"error\"}`}\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"20px\",\r\n            right: \"20px\",\r\n            padding: \"15px 25px\",\r\n            borderRadius: \"6px\",\r\n            color: \"white\",\r\n            backgroundColor: notification.isSuccess ? \"#4caf50\" : \"#f44336\",\r\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.3)\",\r\n            zIndex: 9999,\r\n            fontWeight: \"600\",\r\n            fontSize: \"1rem\",\r\n          }}\r\n        >\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}