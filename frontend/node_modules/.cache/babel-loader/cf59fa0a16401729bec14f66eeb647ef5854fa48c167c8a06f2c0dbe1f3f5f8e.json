{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\WAD Project\\\\LocalMart\\\\frontend\\\\src\\\\components\\\\Buyer\\\\buyer-dashboard\\\\NotificationsComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Heart, Search, Filter, Star, MapPin } from 'lucide-react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport TimePicker from 'react-time-picker';\nimport 'react-time-picker/dist/TimePicker.css';\nimport 'react-clock/dist/Clock.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotificationsComponent() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [selectedNotifications, setSelectedNotifications] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Replace with your actual API endpoint\n    const fetchNotifications = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch('https:localhost/5000/api/notifications'); // Your API URL here\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setNotifications(data);\n      } catch (err) {\n        setError(err.message || 'Failed to fetch notifications.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNotifications();\n  }, []);\n\n  // Now the rest of your code can use the notifications state dynamically\n\n  // Notification counts, filters, handlers etc. (same as before)...\n\n  // ... Your existing handlers and UI rendering code here, just using notifications state.\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buyer-notifications-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading notifications...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buyer-notifications-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n  if (notifications.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buyer-notifications-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No notifications yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Continue rendering your filtered notifications and UI...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buyer-notifications-content\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n_s(NotificationsComponent, \"9L+aenO7wLzXQ20PrMqMrRUbNCk=\");\n_c = NotificationsComponent;\nexport default NotificationsComponent;\nvar _c;\n$RefreshReg$(_c, \"NotificationsComponent\");","map":{"version":3,"names":["React","useState","useEffect","Heart","Search","Filter","Star","MapPin","TimePicker","jsxDEV","_jsxDEV","NotificationsComponent","_s","notifications","setNotifications","activeFilter","setActiveFilter","selectedNotifications","setSelectedNotifications","selectAll","setSelectAll","loading","setLoading","error","setError","fetchNotifications","response","fetch","ok","Error","status","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/WAD Project/LocalMart/frontend/src/components/Buyer/buyer-dashboard/NotificationsComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Heart, Search, Filter, Star, MapPin } from 'lucide-react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport TimePicker from 'react-time-picker';\r\nimport 'react-time-picker/dist/TimePicker.css';\r\nimport 'react-clock/dist/Clock.css';\r\n\r\nfunction NotificationsComponent() {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [activeFilter, setActiveFilter] = useState('all');\r\n    const [selectedNotifications, setSelectedNotifications] = useState([]);\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Replace with your actual API endpoint\r\n        const fetchNotifications = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n            try {\r\n                const response = await fetch('https:localhost/5000/api/notifications'); // Your API URL here\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setNotifications(data);\r\n            } catch (err) {\r\n                setError(err.message || 'Failed to fetch notifications.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNotifications();\r\n    }, []);\r\n\r\n    // Now the rest of your code can use the notifications state dynamically\r\n\r\n    // Notification counts, filters, handlers etc. (same as before)...\r\n\r\n    // ... Your existing handlers and UI rendering code here, just using notifications state.\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"buyer-notifications-content\">\r\n                <h2>Loading notifications...</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"buyer-notifications-content\">\r\n                <h2>Error: {error}</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (notifications.length === 0) {\r\n        return (\r\n            <div className=\"buyer-notifications-content\">\r\n                <h3>No notifications yet.</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Continue rendering your filtered notifications and UI...\r\n\r\n    return (\r\n      <div className=\"buyer-notifications-content\">\r\n        {/* Your full notifications UI here */}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NotificationsComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,MAAM,QAAQ,cAAc;AAClE,OAAO,+CAA+C;AACtD,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAO,uCAAuC;AAC9C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,sBAAsBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMuB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnCH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,IAAI;QACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC,CAAC,CAAC;QACxE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC7D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClClB,gBAAgB,CAACiB,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVT,QAAQ,CAACS,GAAG,CAACC,OAAO,IAAI,gCAAgC,CAAC;MAC7D,CAAC,SAAS;QACNZ,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;;EAEA;;EAEA,IAAIJ,OAAO,EAAE;IACT,oBACIX,OAAA;MAAKyB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,eACxC1B,OAAA;QAAA0B,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAEd;EAEA,IAAIjB,KAAK,EAAE;IACP,oBACIb,OAAA;MAAKyB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,eACxC1B,OAAA;QAAA0B,QAAA,GAAI,SAAO,EAACb,KAAK;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAEd;EAEA,IAAI3B,aAAa,CAAC4B,MAAM,KAAK,CAAC,EAAE;IAC5B,oBACI/B,OAAA;MAAKyB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,eACxC1B,OAAA;QAAA0B,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAEd;;EAEA;;EAEA,oBACE9B,OAAA;IAAKyB,SAAS,EAAC;EAA6B;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvC,CAAC;AAEZ;AAAC5B,EAAA,CAnEQD,sBAAsB;AAAA+B,EAAA,GAAtB/B,sBAAsB;AAqE/B,eAAeA,sBAAsB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}