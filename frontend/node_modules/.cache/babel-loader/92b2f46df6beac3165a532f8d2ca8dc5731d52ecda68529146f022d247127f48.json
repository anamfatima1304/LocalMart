{"ast":null,"code":"// src/services/authService.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nclass AuthService {\n  // Register a new user\n  async register(userData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n\n      // Store token and user data\n      if (data.data.token) {\n        localStorage.setItem('token', data.data.token);\n        localStorage.setItem('user', JSON.stringify(data.data.user));\n      }\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  }\n\n  // Login user\n  async login(credentials) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n\n      // Store token and user data\n      if (data.data.token) {\n        localStorage.setItem('token', data.data.token);\n        localStorage.setItem('user', JSON.stringify(data.data.user));\n      }\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  }\n\n  // Logout user\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  // Get current user profile\n  async getProfile() {\n    try {\n      const token = this.getToken();\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        if (response.status === 401) {\n          this.logout();\n        }\n        throw new Error(data.message || 'Failed to fetch profile');\n      }\n\n      // Update stored user data\n      localStorage.setItem('user', JSON.stringify(data.data.user));\n      return data;\n    } catch (error) {\n      console.error('Get profile error:', error);\n      throw error;\n    }\n  }\n\n  // Update user profile\n  async updateProfile(profileData) {\n    try {\n      const token = this.getToken();\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(profileData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        if (response.status === 401) {\n          this.logout();\n        }\n        throw new Error(data.message || 'Failed to update profile');\n      }\n\n      // Update stored user data\n      localStorage.setItem('user', JSON.stringify(data.data.user));\n      return data;\n    } catch (error) {\n      console.error('Update profile error:', error);\n      throw error;\n    }\n  }\n\n  // Change password\n  async changePassword(passwordData) {\n    try {\n      const token = this.getToken();\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await fetch(`${API_BASE_URL}/auth/change-password`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(passwordData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        if (response.status === 401) {\n          this.logout();\n        }\n        throw new Error(data.message || 'Failed to change password');\n      }\n      return data;\n    } catch (error) {\n      console.error('Change password error:', error);\n      throw error;\n    }\n  }\n\n  // Get stored token\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  // Get stored user data\n  getCurrentUser() {\n    try {\n      const user = localStorage.getItem('user');\n      return user ? JSON.parse(user) : null;\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  }\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    const token = this.getToken();\n    const user = this.getCurrentUser();\n    return !!(token && user);\n  }\n\n  // Check if user is a seller\n  isSeller() {\n    const user = this.getCurrentUser();\n    return user && user.userType === 'seller';\n  }\n\n  // Check if user is a buyer\n  isBuyer() {\n    const user = this.getCurrentUser();\n    return user && user.userType === 'buyer';\n  }\n\n  // Get user type\n  getUserType() {\n    const user = this.getCurrentUser();\n    return user ? user.userType : null;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","AuthService","register","userData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","token","localStorage","setItem","user","error","console","login","credentials","logout","removeItem","window","location","href","getProfile","getToken","status","updateProfile","profileData","changePassword","passwordData","getItem","getCurrentUser","parse","isAuthenticated","isSeller","userType","isBuyer","getUserType"],"sources":["C:/Users/Blue Sky/Desktop/LocalMart/LocalMart/frontend/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nclass AuthService {\r\n  // Register a new user\r\n  async register(userData) {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n\r\n      // Store token and user data\r\n      if (data.data.token) {\r\n        localStorage.setItem('token', data.data.token);\r\n        localStorage.setItem('user', JSON.stringify(data.data.user));\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Login user\r\n  async login(credentials) {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n\r\n      // Store token and user data\r\n      if (data.data.token) {\r\n        localStorage.setItem('token', data.data.token);\r\n        localStorage.setItem('user', JSON.stringify(data.data.user));\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Logout user\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    window.location.href = '/login';\r\n  }\r\n\r\n  // Get current user profile\r\n  async getProfile() {\r\n    try {\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n\r\n      const response = await fetch(`${API_BASE_URL}/auth/profile`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          this.logout();\r\n        }\r\n        throw new Error(data.message || 'Failed to fetch profile');\r\n      }\r\n\r\n      // Update stored user data\r\n      localStorage.setItem('user', JSON.stringify(data.data.user));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Get profile error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Update user profile\r\n  async updateProfile(profileData) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n\r\n      const response = await fetch(`${API_BASE_URL}/auth/profile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(profileData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          this.logout();\r\n        }\r\n        throw new Error(data.message || 'Failed to update profile');\r\n      }\r\n\r\n      // Update stored user data\r\n      localStorage.setItem('user', JSON.stringify(data.data.user));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Update profile error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Change password\r\n  async changePassword(passwordData) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n\r\n      const response = await fetch(`${API_BASE_URL}/auth/change-password`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(passwordData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          this.logout();\r\n        }\r\n        throw new Error(data.message || 'Failed to change password');\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Change password error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get stored token\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  // Get stored user data\r\n  getCurrentUser() {\r\n    try {\r\n      const user = localStorage.getItem('user');\r\n      return user ? JSON.parse(user) : null;\r\n    } catch (error) {\r\n      console.error('Error parsing user data:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Check if user is authenticated\r\n  isAuthenticated() {\r\n    const token = this.getToken();\r\n    const user = this.getCurrentUser();\r\n    return !!(token && user);\r\n  }\r\n\r\n  // Check if user is a seller\r\n  isSeller() {\r\n    const user = this.getCurrentUser();\r\n    return user && user.userType === 'seller';\r\n  }\r\n\r\n  // Check if user is a buyer\r\n  isBuyer() {\r\n    const user = this.getCurrentUser();\r\n    return user && user.userType === 'buyer';\r\n  }\r\n\r\n  // Get user type\r\n  getUserType() {\r\n    const user = this.getCurrentUser();\r\n    return user ? user.userType : null;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}