{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nclass OrderService {\n  // Get auth token from localStorage\n  getAuthToken() {\n    return localStorage.getItem('token');\n  }\n\n  // Get auth headers\n  getAuthHeaders() {\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.getAuthToken()}`\n    };\n  }\n\n  // Create new order\n  async createOrder(orderData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/orders/create`, {\n        method: 'POST',\n        headers: this.getAuthHeaders(),\n        body: JSON.stringify(orderData)\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.message || 'Failed to create order');\n      }\n      return result;\n    } catch (error) {\n      console.error('Create order error:', error);\n      throw error;\n    }\n  }\n\n  // Get user orders\n  async getUserOrders(userId, params = {}) {\n    try {\n      const queryParams = new URLSearchParams(params).toString();\n      const url = `${API_BASE_URL}/orders/user/${userId}${queryParams ? `?${queryParams}` : ''}`;\n      const response = await fetch(url, {\n        headers: this.getAuthHeaders()\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.message || 'Failed to fetch orders');\n      }\n      return result;\n    } catch (error) {\n      console.error('Get user orders error:', error);\n      throw error;\n    }\n  }\n\n  // Get order by ID\n  async getOrderById(orderId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\n        headers: this.getAuthHeaders()\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.message || 'Failed to fetch order');\n      }\n      return result;\n    } catch (error) {\n      console.error('Get order error:', error);\n      throw error;\n    }\n  }\n\n  // Cancel order\n  async cancelOrder(orderId, reason = '') {\n    try {\n      const response = await fetch(`${API_BASE_URL}/orders/${orderId}/cancel`, {\n        method: 'PATCH',\n        headers: this.getAuthHeaders(),\n        body: JSON.stringify({\n          reason\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.message || 'Failed to cancel order');\n      }\n      return result;\n    } catch (error) {\n      console.error('Cancel order error:', error);\n      throw error;\n    }\n  }\n}\nexport const orderService = new OrderService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","OrderService","getAuthToken","localStorage","getItem","getAuthHeaders","createOrder","orderData","response","fetch","method","headers","body","JSON","stringify","result","json","ok","Error","message","error","console","getUserOrders","userId","params","queryParams","URLSearchParams","toString","url","getOrderById","orderId","cancelOrder","reason","orderService"],"sources":["C:/Users/Administrator/Desktop/WAD Project/LocalMart/frontend/src/services/orderService.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nclass OrderService {\r\n  // Get auth token from localStorage\r\n  getAuthToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  // Get auth headers\r\n  getAuthHeaders() {\r\n    return {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.getAuthToken()}`\r\n    };\r\n  }\r\n\r\n  // Create new order\r\n  async createOrder(orderData) {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/orders/create`, {\r\n        method: 'POST',\r\n        headers: this.getAuthHeaders(),\r\n        body: JSON.stringify(orderData)\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(result.message || 'Failed to create order');\r\n      }\r\n\r\n      return result;\r\n      \r\n    } catch (error) {\r\n      console.error('Create order error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get user orders\r\n  async getUserOrders(userId, params = {}) {\r\n    try {\r\n      const queryParams = new URLSearchParams(params).toString();\r\n      const url = `${API_BASE_URL}/orders/user/${userId}${queryParams ? `?${queryParams}` : ''}`;\r\n      \r\n      const response = await fetch(url, {\r\n        headers: this.getAuthHeaders()\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(result.message || 'Failed to fetch orders');\r\n      }\r\n\r\n      return result;\r\n      \r\n    } catch (error) {\r\n      console.error('Get user orders error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get order by ID\r\n  async getOrderById(orderId) {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\r\n        headers: this.getAuthHeaders()\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(result.message || 'Failed to fetch order');\r\n      }\r\n\r\n      return result;\r\n      \r\n    } catch (error) {\r\n      console.error('Get order error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Cancel order\r\n  async cancelOrder(orderId, reason = '') {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/orders/${orderId}/cancel`, {\r\n        method: 'PATCH',\r\n        headers: this.getAuthHeaders(),\r\n        body: JSON.stringify({ reason })\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(result.message || 'Failed to cancel order');\r\n      }\r\n\r\n      return result;\r\n      \r\n    } catch (error) {\r\n      console.error('Cancel order error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const orderService = new OrderService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}